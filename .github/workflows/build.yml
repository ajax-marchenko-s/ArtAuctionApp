name: Build

on:
  push:
    branches:
      - 'master'
      - 'feature/gh-playground'
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Start docker container
        run: docker compose --profile gh-actions up -d

      - name: Run gradle build
        run: ${gradle_cmd} build

      - name: Run Delta Coverage check
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }}
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF"

      - name: Add Delta Coverage report
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@2.4.0
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Add Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.15.1
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        with:
          check_name: 'General Tests Report'
          files: '**/build/test-results/**/TEST-*.xml'

      - name: Print commit name
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"

      - name: Logging
        run: |
          echo "${{toJSON(github.event)}}"
